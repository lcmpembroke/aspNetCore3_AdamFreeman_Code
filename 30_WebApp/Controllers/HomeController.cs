using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.Filters;
using System;
using WebApp.Filters;

namespace WebApp.Controllers
{
    //[HttpsOnly]           // page 784 & page 810 removed as made global filter
    [ResultDiagnostics]     // page 800 Result Filter applied
    //[GuidResponse]          // page 805  -> removed p810 as as "Always Run" filter which replaces the result generated by the global filter!!!
    //[GuidResponse]          // page 805
    [Message("This is controller-scoped message filter",Order = 10)]
    public class HomeController : Controller
    {
        [Message("This is first ACTION-scoped message filter", Order = 1)]
        [Message("This is second ACTION-scoped filter", Order = -1)]
        public IActionResult Index()
        {
            return View("Message", "This is from Index() action on HomeController!");
        }

        public IActionResult Secure(string messageA)
        {
            return View("Message", $"This is the Secure() action on the HomeController {messageA}!");
        }

        // e.g. /home/messages?message1=Durham&message2=Newcastle            will RETURN "New message, Newcastle"
       // commented out page 793: [ChangeArg] // action filter defined in WebApp/Filters/ChangeArgAttribute.cs
        public IActionResult Messages(string message1, string message2 = "None")
        {
            return View("Message", $"{message1}, {message2}");
        }

        public override void OnActionExecuting(ActionExecutingContext context)
        {
            if (context.ActionArguments.ContainsKey("message1"))
            {
                context.ActionArguments["message1"] = "Changed message1!";
            }
            if (context.ActionArguments.ContainsKey("messageA"))
            {
                context.ActionArguments["messageA"] = "Changed messageA!";
            }
        }

        [RangeException]
        public ViewResult GenerateException(int? id)
        {
            if (id == null)
            {
                throw new ArgumentNullException(nameof(id));
            }
            else if (id > 10)
            {
                throw new ArgumentOutOfRangeException(nameof(id));
            }
            else
            {
                return View("Message", $"The value of id is {id}");
            }
        }
    }
}